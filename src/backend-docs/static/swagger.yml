swagger: "2.0"
info:
  title: "Task Management API"
  version: "1.0"
  description: "API for managing tasks with user authentication and administrative control."
host: "localhost:3000"
schemes:
  - "http"
basePath: "/"
consumes:
  - "application/json"
produces:
  - "application/json"

securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"

paths:
  /users:
    post:
      tags:
        - "Admin"
      summary: "Create a new user"
      description: "Allows an admin to create a new user entry for task management."
      security:
        - Bearer: []
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            required:
              - "user_name"
              - "user_role"
            properties:
              user_name:
                type: "string"
              user_role:
                type: "string"
                enum: ["admin", "user"]
      responses:
        "201":
          description: "User created successfully"
        "400":
          description: "Invalid input, uncompleted body, or incorrect JSON format"
        "401":
          description: "Authentication error"
  /tasks:
    post:
      tags:
        - "Tasks"
      summary: "Create a new task"
      description: "Allows authenticated users to create a new task."
      security:
        - Bearer: []
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            required:
              - "task"
            properties:
              task:
                type: "string"
      responses:
        "201":
          description: "Task created successfully"
        "400":
          description: "Invalid input or incorrect JSON format"
        "401":
          description: "Authentication error"
        "404":
          description: "User not found"
    get:
      tags:
        - "Tasks"
      summary: "Retrieve all tasks for the authenticated user"
      description: "Returns a list of all tasks associated with the authenticated user."
      security:
        - Bearer: []
      responses:
        "200":
          description: "List of tasks"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
        "401":
          description: "Authentication error"
        "404":
          description: "User not found"
    put:
      tags:
        - "Tasks"
      summary: "Update the status of a task"
      description: "Allows a user to update the status of a specific task."
      security:
        - Bearer: []
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            required:
              - "task_id"
              - "status"
            properties:
              task_id:
                type: "string"
              status:
                type: "string"
                enum: ["pending", "done"]
      responses:
        "202":
          description: "Task status updated successfully"
        "400":
          description: "Incomplete body or incorrect JSON format"
        "401":
          description: "Authentication error"
        "404":
          description: "User not found"
        "500":
          description: "Task does not exist or user not found"
    delete:
      tags:
        - "Tasks"
      summary: "Delete a task"
      description: "Allows a user to delete a specific task."
      security:
        - Bearer: []
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            required:
              - "task_id"
            properties:
              task_id:
                type: "string"
      responses:
        "203":
          description: "Task deleted successfully"
        "400":
          description: "Incomplete body or incorrect JSON format"
        "401":
          description: "Authentication error"
        "404":
          description: "User not found"
        "500":
          description: "Task does not exist or user not found"

definitions:
  Task:
    type: "object"
    properties:
      id:
        type: "integer"
      text:
        type: "string"
      status:
        type: "string"
